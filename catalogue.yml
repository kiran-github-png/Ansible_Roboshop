- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
       name: roboshop
       comment: roboshop system user
       system: true
       shell: /sbin/nologin
       home: /app

  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip

  - name: extract catalogue application
    ansible.builtin.unarchive:
      remote_src: yes
      src: /tmp/catalogue.zip
      dest: /app

  - name: download dependencies
    community.general.npm:
      path: /app 

  - name: catalogue service file
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
      
  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  # - name: connect to mongodb catalogue
  #   ansible.builtin.command: mongosh mongodb.daws86s.blog --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
  #   register: catalogue_output

  - name: evaluate catalogue database
    community.mongodb.mongodb_shell:
      login_host: mongodb.daws86s.blog
      eval: db.getMongo().getDBNames().indexOf('catalogue')
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

 
       
